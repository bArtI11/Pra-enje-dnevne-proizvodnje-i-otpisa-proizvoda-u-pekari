#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define FILE_NAME "pekara.dat"

typedef struct {
    int id;
    char naziv[50];
    char vrsta[20]; // npr. slatko/slano
    char datum[11]; // format: dd.mm.yyyy
    int proizvedeno;
    int ostalo;
} Proizvod;

// Funkcija za unos novog proizvoda
void dodajProizvod() {
    FILE *fp = fopen(FILE_NAME, "ab");
    if (!fp) {
        perror("Greska pri otvaranju datoteke");
        return;
    }

    Proizvod p;
    printf("Unesi ID proizvoda: ");
    scanf("%d", &p.id);
    printf("Naziv proizvoda: ");
    scanf(" %[^\n]", p.naziv);
    printf("Vrsta (slatko/slano): ");
    scanf(" %s", p.vrsta);
    printf("Datum proizvodnje (dd.mm.yyyy): ");
    scanf(" %s", p.datum);
    printf("Kolicina proizvedena: ");
    scanf("%d", &p.proizvedeno);
    printf("Kolicina ostala na kraju dana: ");
    scanf("%d", &p.ostalo);

    fwrite(&p, sizeof(Proizvod), 1, fp);
    fclose(fp);
}

// Funkcija za ispis svih proizvoda
void prikaziSve() {
    FILE *fp = fopen(FILE_NAME, "rb");
    if (!fp) {
        perror("Greska pri otvaranju datoteke");
        return;
    }

    Proizvod p;
    printf("\nSvi zapisi:\n");
    while (fread(&p, sizeof(Proizvod), 1, fp)) {
        printf("ID: %d | Naziv: %s | Vrsta: %s | Datum: %s | Proizvedeno: %d | Ostalo: %d\n",
               p.id, p.naziv, p.vrsta, p.datum, p.proizvedeno, p.ostalo);
    }
    fclose(fp);
}

// Funkcija za pretragu po datumu
void pretraziPoDatumu() {
    char datum[11];
    printf("Unesi datum (dd.mm.yyyy): ");
    scanf("%s", datum);

    FILE *fp = fopen(FILE_NAME, "rb");
    if (!fp) {
        perror("Greska pri otvaranju datoteke");
        return;
    }

    Proizvod p;
    int ukupnoProizvedeno = 0, ukupnoOstalo = 0;
    printf("\nProizvodi za datum %s:\n", datum);
    while (fread(&p, sizeof(Proizvod), 1, fp)) {
        if (strcmp(p.datum, datum) == 0) {
            printf("ID: %d | Naziv: %s | Vrsta: %s | Proizvedeno: %d | Ostalo: %d\n",
                   p.id, p.naziv, p.vrsta, p.proizvedeno, p.ostalo);
            ukupnoProizvedeno += p.proizvedeno;
            ukupnoOstalo += p.ostalo;
        }
    }
    printf("Ukupno proizvedeno: %d | Ukupno ostalo: %d\n", ukupnoProizvedeno, ukupnoOstalo);
    fclose(fp);
}

// Funkcija za a≈æuriranje po ID-u
void azurirajProizvod() {
    int trazeniID;
    printf("Unesi ID proizvoda za azuriranje: ");
    scanf("%d", &trazeniID);

    FILE *fp = fopen(FILE_NAME, "rb+");
    if (!fp) {
        perror("Greska pri otvaranju datoteke");
        return;
    }

    Proizvod p;
    while (fread(&p, sizeof(Proizvod), 1, fp)) {
        if (p.id == trazeniID) {
            printf("Novi naziv: ");
            scanf(" %[^\n]", p.naziv);
            printf("Nova vrsta: ");
            scanf(" %s", p.vrsta);
            printf("Novi datum: ");
            scanf(" %s", p.datum);
            printf("Nova kolicina proizvedena: ");
            scanf("%d", &p.proizvedeno);
            printf("Nova kolicina ostala: ");
            scanf("%d", &p.ostalo);

            fseek(fp, -sizeof(Proizvod), SEEK_CUR);
            fwrite(&p, sizeof(Proizvod), 1, fp);
            printf("Podaci azurirani.\n");
            fclose(fp);
            return;
        }
    }

    printf("Proizvod s ID %d nije pronadjen.\n", trazeniID);
    fclose(fp);
}

// Funkcija za brisanje proizvoda po ID-u
void obrisiProizvod() {
    int trazeniID;
    printf("Unesi ID proizvoda za brisanje: ");
    scanf("%d", &trazeniID);

    FILE *fp = fopen(FILE_NAME, "rb");
    FILE *temp = fopen("temp.dat", "wb");
    if (!fp || !temp) {
        perror("Greska pri otvaranju datoteka");
        return;
    }

    Proizvod p;
    int obrisan = 0;
    while (fread(&p, sizeof(Proizvod), 1, fp)) {
        if (p.id != trazeniID) {
            fwrite(&p, sizeof(Proizvod), 1, temp);
        } else {
            obrisan = 1;
        }
    }

    fclose(fp);
    fclose(temp);
    remove(FILE_NAME);
    rename("temp.dat", FILE_NAME);

    if (obrisan)
        printf("Proizvod obrisan.\n");
    else
        printf("Proizvod s tim ID-om nije pronadjen.\n");
}

// Glavni meni
void meni() {
    int izbor;
    do {
        printf("\n--- PEKARA CRUD PROGRAM ---\n");
        printf("1. Dodaj proizvod\n");
        printf("2. Prikazi sve proizvode\n");
        printf("3. Pretrazi po datumu\n");
        printf("4. Azuriraj proizvod\n");
        printf("5. Obrisi proizvod\n");
        printf("6. Izlaz\n");
        printf("Odaberi opciju: ");
        scanf("%d", &izbor);

        switch (izbor) {
            case 1: dodajProizvod(); break;
            case 2: prikaziSve(); break;
            case 3: pretraziPoDatumu(); break;
            case 4: azurirajProizvod(); break;
            case 5: obrisiProizvod(); break;
            case 6: printf("Izlaz iz programa.\n"); break;
            default: printf("Nepoznata opcija!\n");
        }
    } while (izbor != 6);
}

int main() {
    meni();
    return 0;
}
